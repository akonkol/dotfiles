
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Provide command to generate a 2:1 ratio layout
bind @ \
  split-window -h -c "#{pane_current_path}" -p 33 \;\
  select-pane -L \;\

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10
bind = select-layout tiled

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# Confirm before changing your bespoke layout to zebra stripes
bind Space confirm next-layout

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
setw -g mode-keys vi

# Set the prefix to ^A, like screen
unbind C-b
set -g prefix ^A
bind a send-prefix

# Start numbering windows at 1
set -g base-index 1

# automatically renumber remaining windows when closing a window
set-option -g renumber-windows on

bind ^a last-window # toggle last window like screen

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

# avoid lag when pressing `esc` in vim
# https://stackoverflow.com/a/33812578
set -s escape-time 0

# longer scrollback
set -g history-limit 10000

set -g status-interval 1
set -g status-bg default
set -g status-fg white


# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
# set -g default-terminal screen-256color

# disable mouse mode by default
if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  'set -g mouse off'
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  'set -g mode-mouse off ;\
  set -g mouse-resize-pane off ;\
  set -g mouse-select-pane off ;\
  set -g mouse-select-window off'

# Toggle mouse on with m
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  "bind m \
    set -g mode-mouse on \\;\
    set -g mouse-resize-pane on \\;\
    set -g mouse-select-pane on \\;\
    set -g mouse-select-window on \\;\
    display 'Mouse: ON'"

if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  "bind m \ set -g mouse on \\;\
    display 'Mouse: ON'"

# Toggle mouse off with M
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  "bind M \
    set -g mode-mouse off \\;\
    set -g mouse-resize-pane off \\;\
    set -g mouse-select-pane off \\;\
    set -g mouse-select-window off \\;\
    display 'Mouse: OFF'"

if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  "bind M \
    set -g mouse off \\;\
    display 'Mouse: OFF'"

# reload tmux config file with C-a r
bind r source ~/.tmux.conf

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind c new-window -c '#{pane_current_path}'

# Rebind prefix to b
bind B set -g prefix ^b
bind A set -g prefix ^a

# Save tmux history - http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
bind-key S command-prompt -p 'save history to filename:' -I '/tmp/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# Toggle synchronize-panes with C-a y
bind y set synchronize-panes

# Fix copy/paste on MacOS: https://thoughtbot.com/blog/how-to-copy-and-paste-with-tmux-on-mac-os-x
if-shell "test -f /usr/local/bin/reattach-to-user-namespace" 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

background="#24283b"
foreground="#a9b1d6"
black="#414868"
blue="#7aa2f7"
cyan="#7dcfff"
green="#73daca"
magenta="#bb9af7"
red="#f7768e"
white="#a9b1d6"
yellow="#e0af68"

bblack="#414868"
bblue="#7aa2f7"
bcya="#7dcfff"
bgreen="#41a6b5"
bmagenta="#bb9af7"
bred="#f7768e"
bwhite="#787c99"
byellow="#e0af68"

RESET="#[fg=${foreground},bg=${background},nobold,noitalics,nounderscore,nodim]"
# Highlight colors
set -g mode-style "fg=${bgreen},bg=${bblack}"

set -g message-style "bg=${blue},fg=${background}"
set -g message-command-style "fg=${white},bg=${black}"

set -g pane-border-style "fg=${bblack}"
set -g pane-active-border-style "fg=${blue}"
set -g pane-border-status off

set -g status-style bg="${background}"

# are we zoomed into a pane? TODO
set -ga status-left "#[bg=${bblack}#fg=${blue}] #{?window_zoomed_flag,↕,.} "
set -g status-left  "#[fg=${bblack},bg=${blue},bold] #{?client_prefix,󰠠 ,#[dim]󰤂 }#[bold,nodim]#S "
set -g status-right "" 

#+--- Windows ---+
# Focus
set -g window-status-current-format "$RESET#[fg=${green},bg=${bblack}] #{?#{==:#{pane_current_command},ssh},󰣀 , }#[fg=${foreground},bold,nodim]$window_number#W#[nobold]#{?window_zoomed_flag, $zoom_number, $custom_pane}#{?window_last_flag, , }"
# Unfocused
set -g window-status-format "$RESET#[fg=${foreground}] #{?#{==:#{pane_current_command},ssh},󰣀 , }${RESET}$window_number#W#[nobold,dim]#{?window_zoomed_flag, $zoom_number, $custom_pane}#[fg=${yellow}]#{?window_last_flag,󰁯  , }"

#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
### Tokyo Night Theme configuration
run '~/.tmux/plugins/tpm/tpm'
